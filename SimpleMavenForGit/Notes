Git
---
Git is distributed repository where every local machine contains the copy of the projects and SVN or CVS or central repository where projects relies only in central server

Features
---------
Fetching data from local repository is faster than fecthing from repository.
Its an open source


Commands
--------

*************************************************************************************************************************
git init - to initialize a repoisitory

$ git init
Initialized empty Git repository in D:/STS-Workspace/.git/

*************************************************************************************************************************

git remote add orgin - to add a repository to pull or push files from.

Manisurya@LAPTOP-SKURJK48 MINGW64 /d/STS-Workspace (master)
$ git remote add orgin https://github.com/manikandant093/msgit.git

*************************************************************************************************************************

git pull orgin master - to pull the master branch (files pulled will be in compressed format, once u included in workspaceor staging area it will be unpacked, after we pushed that it will be changed back to compressed format)

git pull orgin master
remote: Enumerating objects: 6, done.
remote: Counting objects: 100% (6/6), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (6/6), 1.20 KiB | 3.00 KiB/s, done.
From https://github.com/manikandant093/msgit
 * branch            master     -> FETCH_HEAD
 * [new branch]      master     -> orgin/master
 
 *************************************************************************************************************************
 
git status - to know the status of the tracked or untracked files. 
 
git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .metadata/
        HelloWorld/
        PeopleManagementApp-2/
        PeopleManagementApp/
        SimpleMavenForGit/
        TicketBookingManagent/
        TicketBookingManagent2WithMySQL/

nothing added to commit but untracked files present (use "git add" to track)

*************************************************************************************************************************

git add SimpleMavenForGit   - adding this project to the staged area for commit.
git add -A   - adding all the files and folders in the repository to the staging area.


$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   SimpleMavenForGit/.classpath
        new file:   SimpleMavenForGit/.project
        new file:   SimpleMavenForGit/.settings/org.eclipse.jdt.apt.core.prefs
        new file:   SimpleMavenForGit/.settings/org.eclipse.jdt.core.prefs
        new file:   SimpleMavenForGit/.settings/org.eclipse.m2e.core.prefs
        new file:   SimpleMavenForGit/Notes
        new file:   SimpleMavenForGit/pom.xml
        new file:   SimpleMavenForGit/src/main/java/com/myproj/MyClass.java
        new file:   SimpleMavenForGit/target/classes/META-INF/MANIFEST.MF
        new file:   SimpleMavenForGit/target/classes/META-INF/maven/com.simplemaven.git/SimpleMavenForGit/pom.properties
        new file:   SimpleMavenForGit/target/classes/META-INF/maven/com.simplemaven.git/SimpleMavenForGit/pom.xml
        new file:   SimpleMavenForGit/target/classes/com/myproj/MyClass.class

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .metadata/
        HelloWorld/
        PeopleManagementApp-2/
        PeopleManagementApp/
        TicketBookingManagent/
        TicketBookingManagent2WithMySQL/
        
*************************************************************************************************************************
The first thing you should do after installing Git on your system is to configure your git username and email address. Git associate your identity with every commit you make.

Git allows you to set a global and per-project username and email address. You can set or change your git identity using the git config command. Changes only affect future commits. The name and email associated with the commits you made prior to the change are not affected.

The global git username and password are associated with commits on all repositories on your system that don’t have repository-specific values.

git config --global user.name "Your Name"
git config --global user.email "youremail@yourdomain.com"

Need to configure the username and mail id
-------------------------------------------

Manisurya@LAPTOP-SKURJK48 MINGW64 /d/STS-Workspace (master)
$ git config user.email "manikandant093@gmail.com"

Manisurya@LAPTOP-SKURJK48 MINGW64 /d/STS-Workspace (master)
$ git config user.name "Manikandan T"

*************************************************************************************************************************

git commit -m   - (m -> reason message while committing)

git commit -a -m   - (-a --> to commit all the files) 

$ git commit -m "Committed the SimpleMavenProj by Manikandan"
[master 67df4ac] Committed the SimpleMavenProj by Manikandan
 12 files changed, 181 insertions(+)
 create mode 100644 SimpleMavenForGit/.classpath
 create mode 100644 SimpleMavenForGit/.project
 create mode 100644 SimpleMavenForGit/.settings/org.eclipse.jdt.apt.core.prefs
 create mode 100644 SimpleMavenForGit/.settings/org.eclipse.jdt.core.prefs
 create mode 100644 SimpleMavenForGit/.settings/org.eclipse.m2e.core.prefs
 create mode 100644 SimpleMavenForGit/Notes
 create mode 100644 SimpleMavenForGit/pom.xml
 create mode 100644 SimpleMavenForGit/src/main/java/com/myproj/MyClass.java
 create mode 100644 SimpleMavenForGit/target/classes/META-INF/MANIFEST.MF
 create mode 100644 SimpleMavenForGit/target/classes/META-INF/maven/com.simplemaven.git/SimpleMavenForGit/pom.properties
 create mode 100644 SimpleMavenForGit/target/classes/META-INF/maven/com.simplemaven.git/SimpleMavenForGit/pom.xml
 create mode 100644 SimpleMavenForGit/target/classes/com/myproj/MyClass.class
 
 $ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   SimpleMavenForGit/Notes

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .metadata/
        HelloWorld/
        PeopleManagementApp-2/
        PeopleManagementApp/
        TicketBookingManagent/
        TicketBookingManagent2WithMySQL/

no changes added to commit (use "git add" and/or "git commit -a")


*************************************************************************************************************************
git log - to see the all commit operations done by the user

git log
commit 21b24e9f672930f20f15f696a6c134f39b1ee128 (HEAD -> master)
Author: Manikandan T <manikandant093@gmail.com>
Date:   Tue Apr 14 20:09:53 2020 +0530

    Committed the SimpleMavenProj by Manikandan

commit c8ea6207ffd849c4c518185e061c66335445893b
Author: Manikandan T <manikandant093@gmail.com>
Date:   Tue Apr 14 20:08:22 2020 +0530

    Committed the SimpleMavenProj by Manikandan

commit daf7791bb90c0501f19a7d8f1aff2231c3aed31e
Author: Manikandan T <manikandant093@gmail.com>
Date:   Tue Apr 14 20:04:02 2020 +0530

    Committed the SimpleMavenProj by Manikandan

commit 07211e3792212820ef150e2f0e66cc215a1dae38
Author: Manikandan T <manikandant093@gmail.com>
Date:   Tue Apr 14 20:03:02 2020 +0530

    Committed the SimpleMavenProj by Manikandan
    
*****************************************************************************************************************************  

git merge branchname - to merge a branch into another branch 
 
 
*****************************************************************************************************************************
 
 $ ssh-keygen - to generate a key to authenticate with github
 
 
 *****************************************************************************************************************************
 
 git push orgin master - pushing the committed files to master branch
 
 $ git push orgin master
Enumerating objects: 65, done.
Counting objects: 100% (65/65), done.
Delta compression using up to 8 threads
Compressing objects: 100% (54/54), done.
Writing objects: 100% (64/64), 8.22 KiB | 561.00 KiB/s, done.
Total 64 (delta 18), reused 0 (delta 0)
remote: Resolving deltas: 100% (18/18), done.
To https://github.com/manikandant093/msgit.git
   029e14c..9c52fba  master -> master
 
 git branch -a - to viuew all the local and remote branches
 
 $ git branch -a
  firstbrach
* master
  remotes/orgin/master
 
 
 $ git branch -r  - shows only remote branche
  orgin/master
 
 
 $ git branch  - lists the local branches only
  firstbrach
* master
 
 
 $ git show-branch    - to see the list of branches and commits as follows
! [firstbrach] Committed the SimpleMavenProj by Manikandan
 * [master] Committed the SimpleMavenProj by Manikandan
--
 * [master] Committed the SimpleMavenProj by Manikandan
 * [master^] Committed the SimpleMavenProj by Manikandan
 * [master~2] Committed the SimpleMavenProj by Manikandan
 * [master~3] Committed the SimpleMavenProj by Manikandan
+* [firstbrach] Committed the SimpleMavenProj by Manikandan


Manisurya@LAPTOP-SKURJK48 MINGW64 /d/STS-Workspace (firstbrach)
$ git branch myBranch   -creates new branch called myBranch by cloning the firstbrach


$ git checkout myBranch  - used to switch between branches
Switched to branch 'myBranch'
M       SimpleMavenForGit/Notes
M       SimpleMavenForGit/target/classes/META-INF/maven/com.simplemaven.git/SimpleMavenForGit/pom.properties


Manisurya@LAPTOP-SKURJK48 MINGW64 /d/STS-Workspace (myBranch)
$ git branch -a
  firstbrach
  master
* myBranch
  remotes/orgin/master
  remotes/orgin/myBranch


**************************************************************************************************************************************